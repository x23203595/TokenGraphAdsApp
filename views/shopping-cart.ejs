<%- include partials/header.ejs %>
<head>
    <link rel="stylesheet" href="TokenGraphAdsApp/public/stylesheets/shoppingcartgraphadstyles.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"></script> 
</head>

<nav class="navbar navbar-expand-lg navbar-light bg-white py-4 fixed-top">
</nav>

<section id="special" class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="title text-center py-3">
                    <div class="shoppingcartheading">
                        <h2 class="position-relative d-inline-block">Shopping Cart</h2>
                    </div>
                </div>

                <% if (ads && ads.length > 0) { %>
                <div class="row">
                    <% ads.forEach(function(item, index) { %>
                    <div class="col-sm-5 mb-4"> 
                        <div class="list-group-item">
                            <span class="badge"><%= item.qty %></span>
                            <strong><%= item.ad.title %></strong>
                            <div class="special-img position-relative overflow-hidden">
                                <div class="image-container">
                                    <img src="<%= item.ad.imagePath %>" alt="<%= item.ad.title %> Image" class="card-img-top">
                                </div>
                            </div>
                            <span class="label label-success"><%= item.price %> ETH</span>
                        </div>
                    </div>
                    <% if ((index + 1) % 4 === 0) { %>
                </div><div class="row">
                    <% } %>
                    <% }); %>
                </div>

                <div class="row">
                    <div class="col-sm-6 col-md-6 col-md-offset-3 col-sm-offset-3">
                        <strong>Total: <%= totalPrice %> </strong>
                    </div>
                </div>
                <hr>

                <div class="row">
                    <div class="col-sm-6 col-md-6 col-md-offset-3 col-sm-offset-3">
                        <button onclick="connectMetamask()" class="btn mt-3 btn-primary text-uppercase">CONNECT TO METAMASK</button>
                        <button onclick="connectContract()" class="btn mt-3 btn-primary text-uppercase">CONNECT TO CONTRACT</button>
                        <button onclick="depositContract()" class="btn mt-3 btn-primary text-uppercase" id="depositInput">Checkout</button><br>
                        <a href="/page1" class="btn mt-3 btn-primary position-relative">Shop Again!</a>
                    </div>
                </div>
                <% } else { %>
                <div class="row">
                    <div class="col-sm-6 col-md-6 col-md-offset-3 col-sm-offset-3">
                        <h2>No Items in Cart</h2>
                    </div>
                </div>
                <% } %>
            </div>
            <div class="col-lg-6">
                <section class="instructions py-3">
                    <div class="container">
                        <div class="row gy-lg-5 align-items-center justify-content-center">
                            <div class="col-lg-8 text-center">
                                <p class="lead text-muted">Instructions</p>
                                <p>1. Connect to Metamask Wallet, ensuring the connection to the Ethereum Blockchain for sending and receiving Ether.</p>
                                <p>2. Connect to a Smart Contract, which facilitates the execution of transactions in the Ethereum Blockchain through fine-grained interaction of the functions in your Smart Contract.</p>
                                <p>3. Now you can Checkout, reinforcing your standing as an innovative shopper in a seamless, frictionless Web 3.0 way.</p>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</section>


<script> 

    let account;
    const connectMetamask = async () => {
        if(window.ethereum !== "undefined") {
            const accounts = await ethereum.request({method: "eth_requestAccounts"});
            account = accounts[0];
        }
    }

    const connectContract = async () => {
        const ABI = [
        {
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address payable",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getBalance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ];
        const Address = "0x60b305da3df35965c97256d13073dd4ef5ac8e41"; // Taking Address from Remix 
        window.web3 = await new Web3(window.ethereum);
        window.contract = await new window.web3.eth.Contract(ABI, Address);
        document.getElementById("contractArea").innerHTML = "Connected to Contract"; // calling the elementID above
    }

    const getContractAccount = async () => {
        const data = await window.contract.methods.getAddress().call();
    }

    const depositContract = async () => {
        const amount = document.getElementById("depositInput").value;
        await window.contract.methods.deposit().send({from: account, value: web3.utils.toWei('<%= totalPrice %>', 'ether') });
    }

</script>

<%- include partials/footer.ejs %>
   <!-- bootstrap js -->
   <script src = "bootstrap-5.0.2-dist/js/bootstrap.min.js"></script>