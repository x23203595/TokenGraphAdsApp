<%- include partials/header.ejs %>

<head>
    <title>TokenGraphAdsApp</title>
    <link rel = "stylesheet" href = "/stylesheets/frontendconnstyles.css">
</head>
<section class = "smartcontractheading" class = "py-5">
    <div class = "container" style="margin-bottom: 80px;">
        <div class = "row gy-lg-5 align-items-center">
            <div class = "col-lg-6 order-lg-1 text-center text-lg-start">
                <div class = "title pt-3 pb-5">
                    <h2 class = "position-relative d-inline-block ms-4">Smart Contract</h2>
                </div>
                <p class = "lead text-muted">ERC20</p>
                <p><h6>// SPDX-License-Identifier: GPL-3.0

                    pragma solidity ^0.8.25; 
                      
                     interface ERC20Interface { 
                       function totalSupply() external view returns (uint256); 
                       function balanceOf(address account) external view returns (uint256); 
                       function allowance(address owner, address spender) external view returns (uint256); 
                       function transfer(address recipient, uint256 amount) external returns (bool); 
                       function approve(address spender, uint256 amount) external returns (bool); 
                       function transferFrom(address sender, address recipient, uint256 amount) external returns (bool); 
                     
                      event Transfer(address indexed from, address indexed to, uint256 value); 
                      event Approval(address indexed owner, address indexed spender, uint256 value); 
                    } 
                     
                    contract myToken is ERC20Interface { 
                     
                        string public symbol; 
                        string public name; 
                        uint8 public decimals; 
                        uint public _totalSupply; 
                        address public tokenOwner; 
                     
                        mapping(address => uint) private _balances; 
                        mapping(address => mapping(address => uint256)) private _allowances; 
                     
                        constructor() { 
                         tokenOwner = msg.sender; 
                         symbol="TOK"; 
                         name="TokenGraphAdsContract"; 
                         decimals=0; 
                         _totalSupply = 10; 
                         _balances[tokenOwner] = _totalSupply; 
                         emit Transfer(address(0), tokenOwner, _totalSupply); 
                        } 
                     
                        function totalSupply() public view override returns (uint256) { 
                         return _totalSupply - _balances[address(0)]; 
                        } 
                         
                        function balanceOf(address account) public view override returns (uint256) { 
                         return _balances[account]; 
                        } 
                     
                        function allowance(address owner, address spender) public view virtual override returns 
                        (uint256) { 
                         return _allowances[owner][spender]; 
                        } 
                     
                        function transfer(address recipient, uint256 amount) public virtual override returns (bool) 
                        { 
                         address sender = msg.sender; 
                         
                         _balances[sender] = _balances[sender] - amount; 
                         _balances[recipient] = _balances[recipient] + amount; 
                         emit Transfer(sender, recipient, amount); 
                         return true; 
                        } 
                     
                        function approve(address spender, uint256 amount) public virtual override returns (bool) { 
                    
                        address sender = msg.sender; 
                         
                         _allowances[sender][spender] = amount; 
                         emit Approval(sender, spender, amount); 
                         return true; 
                        } 
                     
                        function transferFrom(address sender, address recipient, uint256 amount) public virtual 
                    override returns (bool) { 
                     
                         _balances[sender] = _balances[sender] - amount; 
                         _balances[recipient] = _balances[recipient] + amount; 
                         emit Transfer(sender, recipient, amount); 
                         
                         _allowances[sender][recipient] = amount; 
                         emit Approval(sender, recipient, amount); 
                         return true; 
                        } 
                    } 
                </h6></p>
            </div>
            <div class = "col-lg-6 order-lg-0">
                <img src = "/images/ethereum.jpg" alt = "" class = "img-fluid">
            </div>
        </div>
    </div>
  </section> 
 
 <%- include partials/footer.ejs %>